
- name: Afficher les modules (nom et image) ensemble
  debug:
    msg: "{{ modules | map(attribute='name') | list | zip(modules | map(attribute='image') | list) | map('join', ' ➜ ') | list }}"

- name: Get current container versions
  community.docker.docker_container_info:
    name: "{{ project_name }}_{{ item.name }}_1"
  register: container_versions
  loop: "{{ modules }}"

- name: Debug des images des containers
  debug:
    msg: "{{ container_versions.results | map(attribute='container.Config.Image', default='N/A') | list }}"

- name: Extraire la liste des images des containers
  set_fact:
    container_images_list: >-
      {{
        container_versions.results
        | selectattr('container.Config', 'defined')
        | selectattr('container.Config.Image', 'defined')
        | map(attribute='container.Config.Image')
        | list
      }}

- name: Filtrer les modules à installer ou redémarrer (sans doublons)
  set_fact:
    modules_to_deploy: >-
      {{
        (
          modules | rejectattr('image', 'in', container_images_list)
                  + 
          modules | selectattr('force_restart', 'equalto', true)
        ) | unique(attribute='name') | list
      }}

- name: Valider qu'il n'y a pas de doublons
  assert:
    that:
      - modules_to_deploy | map(attribute='name') | list == (modules_to_deploy | map(attribute='name') | unique | list)
    fail_msg: "ERREUR : Doublons détectés dans modules_to_deploy"


- name: Afficher les noms des modules à déployer
  debug:
    msg: "{{ modules_to_deploy | map(attribute='name') | list }}"
